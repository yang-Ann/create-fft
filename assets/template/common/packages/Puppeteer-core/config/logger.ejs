import { resolve } from "node:path";
import { fileURLToPath } from "node:url";
import fs from "node:fs";
#BR#
import { transformationTime } from "../utils.js";
#BR#
const __dirname = fileURLToPath(new URL(".", import.meta.url));
const rootDir = resolve(__dirname, "../logger", transformationTime("YYYY/MM/DD"));
const imgErrDir = resolve(rootDir, "image");
#BR#
if (!fs.existsSync(rootDir)) fs.mkdirSync(rootDir, { recursive: true });
#BR#
if (!fs.existsSync(imgErrDir)) fs.mkdirSync(imgErrDir, { recursive: true });
#BR#
const errTrackPath = resolve(loggerDir, "./errorStack.log");
#BR#
const operPath = resolve(rootDir, "./operationalProcess.log");
if (!fs.existsSync(operPath)) fs.writeFileSync(operPath, "");
#BR#
<% if (language === "TypeScript") { %>  
type LoggerConfigType = {
  rootDir: string,
  errTrackPath: string,
  operPath: string,
  imgErrDir: string,
}
#BR#
const loggerConfig: LoggerConfigType = {
<% } else if (language === "JavaScript") { %>
const loggerConfig = {
<% } %>
  rootDir,
  imgErrDir,
  errTrackPath,
  operPath,
};


export default loggerConfig;